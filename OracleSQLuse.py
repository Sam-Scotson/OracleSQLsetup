import cx_Oracle

def get_connection():
    try:
        connection = cx_Oracle.connect("username", "password", "localhost/orcl")  # Replace with actual credentials and connection details
        return connection
    except cx_Oracle.DatabaseError as e:
        print("Error connecting to Oracle database:", e)
        return None

def table_exists(connection, table_name):
    if connection:
        cursor = connection.cursor()
        query = f"SELECT COUNT(*) FROM user_tables WHERE table_name = '{table_name.upper()}'"
        cursor.execute(query)
        count = cursor.fetchone()[0]
        cursor.close()
        return count > 0
    return False

def create_table(connection):
    if connection:
        cursor = connection.cursor()
        
        try:
            query = '''CREATE TABLE employees (
                        id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
                        name VARCHAR2(100) NOT NULL,
                        department VARCHAR2(100) NOT NULL,
                        PRIMARY KEY (id)
                    )'''
            cursor.execute(query)
            connection.commit()

            print("Table 'employees' created successfully.")
        except cx_Oracle.DatabaseError as e:
            print("Error creating table:", e)
        finally:
            cursor.close()

def insert_data(connection):
    if connection:
        cursor = connection.cursor()
        
        try:
            name = input("Enter employee name: ")
            department = input("Enter department: ")

            query = "INSERT INTO employees (name, department) VALUES (:name, :department)"
            cursor.execute(query, {"name": name, "department": department})
            connection.commit()

            print("Data inserted successfully.")
        except cx_Oracle.DatabaseError as e:
            print("Error inserting data:", e)
        finally:
            cursor.close()

def main():
    connection = get_connection()
    if not connection:
        return

    table_name = "employees"
    
    if not table_exists(connection, table_name):
        create_new_table = input("No table named 'employees' found. Create a new table? (yes/no): ")
        if create_new_table.lower() == "yes":
            create_table(connection)
        else:
            print("Exiting.")
            connection.close()
            return

    insert_data(connection)

    connection.close()

if __name__ == "__main__":
    main()
This script first checks if the table named 'employees' exists. If it doesn't, it prompts the user if they want to create a new table. If the user agrees, the script creates the table. Otherwise, it exits. After that, the script allows you to insert data into the table.

Again, please replace "username", "password", and "localhost/orcl" with your actual Oracle database credentials and connection details.





